#!/bin/bash

set -e

function reset-db () {
  dropdb -h db -U postgres "$1" || true
  createdb -h db -U postgres "$1"
}

echo -e "===>> Creating source database..."
reset-db source

echo -e "\n===>> Creating destination database..."
reset-db destination

echo -e "\n===>> Making an s3 bucket..."
AWS_ACCESS_KEY_ID=1234 AWS_SECRET_ACCESS_KEY=1234 aws s3 mb s3://test-bucket

echo -e "\n===>> Loading data to source database..."
psql "$SOURCE_URL" -f /test/schema.sql

echo -e "\n===>> Running pg-to-s3..."
POSTGRES_URL="$SOURCE_URL" pg-to-s3 | tee pg-to-s3-out.txt

s3_key=$(grep 'Upload complete:' pg-to-s3-out.txt | sed -e 's/.*Upload complete: //g')

if [ -z "$s3_key" ]; then
  echo -e "\n===>> FAILURE! Expected the output to include 'Upload complete'"
  exit 1
fi

echo -e "\n===>> Running s3-to-pg..."
POSTGRES_URL="$DESTINATION_URL" FORCE_DELETE=1 s3-to-pg "$s3_key"

echo -e "\n===>> select * from foos;"
psql "$DESTINATION_URL" -c 'select * from foos;' | tee s3-to-pg-out.txt

if ! grep -q '3 rows' s3-to-pg-out.txt; then
  echo -e "\n===> FAILURE! Expected the output to include '3 rows'."
  exit 1
fi

echo -e "\n===> SUCCESS!"
exit 0
